Problem: The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences). It differs from problems of finding common substrings: unlike substrings, subsequences are not required to occupy consecutive positions within the original sequences. 


Solution:
1.
    X:  x1, x2, x3, x4 ... xm
    Y:  y1, y2, y3, y4 ... yn
Let LCS(m, n) be the LCS of (x1, x2, ... xm) and (y1, y2, ... yn)
    LCS(m, n): z1, z2, ... zk

if xm == yn
    zk = xm = yn, zk belongs to LCS(m, n)
    LCS(m-1, n-1) == (z1, z2, ... zk-1)
if xm != yn
    if zk != xm
        LCS(m-1, n) == (z1, z2, ... zk)
    else if zk != yn
        LCS(m, n-1) == (z1, z2, ... zk)

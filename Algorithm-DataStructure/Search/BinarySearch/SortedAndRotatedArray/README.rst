Search an element in a sorted and rotated array
================================================================
给定一个有序的数组，但这个数组被轮转(rotate)了。问如何在这样一个数组中使用二分查找。

思路1：分开搜索
--------------------------------
轮转后的有序数组，可以视为2个独立的有序数组，左边一个，右边一个。判断要搜索的元素属于那半边后，再用二分查找就可以。

思路2: 下标翻译
--------------------------------
我们将轮转前的数组的下标视为逻辑下标i，轮转后真实的下标视为物理下标j。设数组长度为n，轮转时被右移了k位，可以粗略认为物理下标比逻辑下标大k个位置(当然要取模)，因此::

    j = (i + k) % n;

这样我们可以写一个普通的二分查找，从数组读取元素时将下标翻译一下即可。

思路3
--------------------------------

1. 找出中间点mid = (l + h) / 2
2. 如果key == mid，返回mid
3. 否则，如果arr[l..mid]是有序的
   a. 如果要搜索的key在arr[l]到arr[mid]之间，递归地对arr[l..mid]执行二分搜索
   b. 否则，递归地对arr[mid+1..r]进行二分搜索
4. 否则，如果arr[mid+1..r]是有序的，
   a. 若要搜索的key在arr[mid+1]到arr[r]之间，递归地对arr[mid+1..r]进行搜索
   b. 否则，递归地对arr[l..mid]进行二分搜索

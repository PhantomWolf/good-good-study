应用层Application Layer
==========================================================
本文说的应用层，并非OSI模型里的第7层(web服务器也属于OSI第7层)，而是指一系列不同于web服务器的应用。例如，假设我们的网站有图片格式转换功能，我们做一个独立的daemon进程，专门处理web前端发来的图片，这个daemon进程就属于本文所说的“应用层”。

.. image:: images/application-layer.png

将web层与应用层分开，可以让你独立的对两者进行扩展、配置。单一责任原则(single responsibility principle)鼓励构建一些较小而独立的服务，并让它们一起工作。这样设计也可以允许异步操作(例如在中间插入一个消息队列)。

微服务(Microservice)
------------------------------------------------
微服务是一种架构，它把一个应用构造成一系列低耦合的服务的集合。简单来说，微服务就是一些独立部署、较小、模块化的服务。每个服务运行独特的进程，服务之间通过定义良好的、轻量级的机制进行交流。例如Pinterest就有以下微服务：用户档案、follower, feed, 搜索、照片上传。

服务发现(Service Discovery)
------------------------------------------------
Consul、Etcd、Zookeeper之类的系统可以帮助服务们互相找到对方(通过跟踪注册的名字、地址、端口)。它们的健康检查功能(Health Checks)帮助验证服务的完整性(使用HTTP)。Consul、Etcd都有内置的键值对存储，有助于存储设置信息和其他共享数据。

微服务架构的缺点：

- 比起单一的服务，微服务架构需要不同的架构、执行、进程视角
- 微服务可能增加部署、执行的复杂度



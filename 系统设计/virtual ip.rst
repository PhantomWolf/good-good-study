Virtual IP虚拟IP
=======================================================
TCP/IP架构下，MAC地址(Media Access Control Address)是设备的链路层地址，也称为物理地址；IP是设备的网络层地址，也称为逻辑地址。一般情况下，一个MAC地址可以对应多个IP地址，但一个IP地址只能对应一个MAC地址。

虚拟IP(VIP或VIPA)是不对应一个实际的物理网络接口的IP地址(可以动态的改变其对应的物理接口)。一个主机除了普通的真实IP(固定)以外，还有可能被分到虚拟IP(VIPA)，使用这两者都可以访问到该主机。

虚拟IP一般用作达到HA(High Availability)的目的,比如让所有项目中数据库链接一项配置的都是这个虚IP，当主服务器发生故障无法对外提供服务时，动态将这个虚IP切换到备用服务器。

用途：

- network address translation(NAT)。对于一对多NAT，虚拟IP地址被NAT设备(通常为路由器)公布，发送给该虚拟IP的数据包被路由到不同的实际IP(通过地址翻译)。虚拟IP有多个变种和实现场景，包括共用地址冗余协议(Common Address Redundancy Protocol, CARP)，以及代理地址解析协议(Proxy Address Resolution Protocol, Proxy ARP)。此外，如果有多个实际IP地址，NAT还可以进行负载分享。
- fault-tolerance(容错)。虚拟IP地址还被用于连接冗余性，为单一机器提供额外的容错选项。
- mobility(移动性)。例如，一个应用拥有一个物理子网的IP地址，它只能被迁移到同一子网内的主机上。我们可以公布一个子网掩码为32的虚拟IP，这样应用就可以迁移到任意主机，而不需要改变IP地址。

简要原理介绍
----------------------------------------------
ARP是地址解析协议，它的作用很简单，将一个IP地址转换为MAC地址，然后给传输层使用。

每台主机中都有一个ARP高速缓存，存储同一个网络内的IP地址与MAC地址的对应关 系，以太网中的主机发送数据时会先从这个缓存中查询目标IP对应的MAC地址，会向这个MAC地址发送数据。操作系统会自动维护这个缓存。

在Linux下可以使用arp命令操作ARP高速缓存。

比如存在物理机A(IP是192.168.192.54 )和物理机器B(IP是192.168.192.40)，A作为对外服务的主服务器(比如数据库主库)，B作为备份机器，两台服务器之间的通信是通过Heartbeat，即主服务器会定时的给备份服务器发送数据包，告知主服务器服务正常，当备份服务器在规定时间内没有收到主服务器的Heartbeat，就会认为主服务器宕机，则备份服务器就会升级为主服务器。假设物理机A的ARP缓存如下::

	地址                     类型    硬件地址             标志  Mask            接口
	192.168.192.54          ether   ec:f4:bb:49:xx:xx   C                    eth0
	192.168.192.237         ether   ec:f4:bb:49:xx:xx   C                    eth0
	192.168.192.40          ether   28:e3:47:c0:xx:xx   C                    eth0
	...

另外物理机器B(IP是192.168.192.40)的ARP缓存如下::

	地址                     类型    硬件地址             标志  Mask            接口
	192.168.192.54          ether   ec:f4:bb:49:xx:xx   C                    eth0
	192.168.192.237         ether   ec:f4:bb:49:xx:xx   C                    eth0
	192.168.192.40          ether   ec:f4:bb:49:xx:xx   C                    eth0
	...

当机器B通过BeatHeart得知机器A对外服务质量低于预期的时候(比如发生故障，服务无响应)，会将自己的ARP缓存发送出去，让路由器修改路由表，告知虚拟地址应该指向我(物理机器B,192.168.192.40),这时候，外界再次访问虚拟IP的时候，机器B会变成主服务器，而A降级为备份服务器。这就完成了主从机器的自动切换，这一切对外界是透明的。

IP漂移
----------------------------------------------
上面的VIP自动切换的过程就称之为IP漂移。

我们可以通过Keepalived来实现这个过程。 Keepalived是一个基于VRRP协议(Virtual Router Redundancy Protocol,即虚拟路由冗余协议)来实现的LVS(负载均衡器)服务高可用方案，可以利用其来避免单点故障。一个LVS服务会有2台服务器运行Keepalived，一台为主服务器（MASTER），一台为备份服务器（BACKUP），但是对外表现为一个虚拟IP，主服务器会发送特定的消息给备份服务器，当备份服务器收不到这个消息的时候，即主服务器宕机的时候， 备份服务器就会接管虚拟IP，继续提供服务，从而保证了高可用性。
